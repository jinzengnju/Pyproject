1.git合并操作
有关错误：本地文件的忽略
git如何实现忽略：git设置本地忽略必须保证git的远程仓库分支上没有这个文件，如果远程分支上存在这个文件，本地设置ignore是不起作用的
如何忽略.idea/workspace.xml：
一般是在.gitignore文件里加入.idea/workspace.xml
但是如果在这样做之前已经将此文件提交到了git远程仓库，需要将git远端执行一下：git rm -r --cached ./idea

2. 如果两个人A和B同时在更改一个项目master，A先将更改上传至github，B需要将最新的更改pull下来，这时候会遇到冲突，那么方法是先stash再pull再pop
git stash
git pull
git stash pop
反过来，如果希望代码库种的文件完全覆盖本地的工作版本
git reset --hard
git pull

3.git status的用法
如果只是修改了文件，还未add和commit，git status会提示no changes added to commit (use "git add" and/or "git commit -a")
执行了add后，git status会提示Changes to be committed:要提交的变更：.......
执行了commit后，working tree is clean

4.忽略git中的.idea/workspace.xml文件方法
在git根目录下新建.gitignore文件，文件中写入.idea/workspace.xml方法即可
如果本地的commit仓库，所以需要将本地commit仓库中删除git rm -r --cached .idea

5.git pull手动解决冲突
再同步代码的过程中，git首先会自动检查冲突，并尝试进行自动合并。最好的情况是大家同时修改一个文件，但是大家修改的是不同的地方。在这种情况下，git会进行非冲突合并
这是再调用git pull的时候，git会尝试非冲g突合并。
而在合并有冲突的文件中，让开发者自己判断如何选择合并。
git stash暂存本地修改
git pull可以拉取线上最新代码
还原暂存内容：
git stash pop stash@{0}
这时候再打开冲突的文件，有Updated upstream 和=====之间的内容就是pull下来的内容，====和stashed changes之间的内容就是本地修改的内容，手动解决冲突即可

6.对于解决 Git 的 Merge Conflict 你有哪些经验和技巧？
meld is a useful three-way-compare merge tool. you can use it in Git.
sudo apt-get install meld;            (install meld)
git config --global merge.tool meld;  (set Git merge tool default as meld)
Usage
When you merge a branch in Git, it may get into conflict state, if you need to go on, you need fix these conflict,but if you need to go back to the state before merge, you can you use
git reset --hard; (get me back)  If you want to fix the conflicts, use
git mergetool;